@page "/shownegociacoes/{email}"
@using SourceCode.Vendas;
@using SourceCode.WebClasses;
@using SourceCode;

<PageTitle>Negociações</PageTitle>
@if(showNegociation)
{
	<NegociationComponent idVenda="idVenda"/>
}
else
{
	<h3>Negociações</h3>
	@if (erro != 0)
	{
		<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="5" />
	}
	else if (sucess)
	{
		<WarningComponent mensagem="@sucessMessage" sucess="true" page="5" />
	}
	<div class="tableFixHead">
		<table>
			<thead>
				<tr>
					<th>Pedido</th>
					<th>Preço</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var venda in table.Content)
				{
					<tr class=@table.Cssclasses[venda.Item1] @onclick="() => table.SelectedRow(venda.Item1)">
						<td> @venda.Item2.Negociacao</td>
						<td> @venda.Item2.Preco</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div>
		<button class="buttonA buttonTable1" @onclick="Consultar">Consultar</button>
	</div>
}

@code 
{
	[Parameter,EditorRequired]
	public string email {get; set;}
	private Table<Venda> table;
	private bool showNegociation;
	private int idVenda;
	private static ShowNegociacoesComponent showNegociacoes;
	private int erro;
	private bool sucess;
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private string sucessMessage;
	protected override void OnInitialized()
	{
		codigosErro[0] = "Negociação não registada";
		List<Venda> negociacaos = SistemaFeiras.GetInstance().GetNegociacoes(email);
		table = new Table<Venda>(negociacaos);
		// public Venda(int idVenda, DateTime data, float preco, string emailCliente, int idFeira, int negociacao, int idStand)
		showNegociacoes = this;
	}
	public static ShowNegociacoesComponent GetInstance()
	{
		return showNegociacoes;
	}
	private void Consultar()
	{
		if(table.IdValid())
		{
			Venda venda = table.GetElement();
			idVenda = venda.IdVenda;
			showNegociation = true;
		}
	}
	public void GetBack()
	{
		showNegociation = false;
		erro = 0;
		sucess = false;
		StateHasChanged();
	}

	public void GetBack(int erro)
	{
		showNegociation = false;
		this.erro = erro;
		sucess = false;
		StateHasChanged();
	}

	public void GetBack(string message)
	{
		showNegociation = false;
		erro = 0;
		sucess = true;
		sucessMessage = message;
		StateHasChanged();
	}
}
