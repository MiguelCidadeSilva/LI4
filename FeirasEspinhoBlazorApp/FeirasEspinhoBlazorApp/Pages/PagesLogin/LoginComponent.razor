@page "/login"
@inject NavigationManager navigationManager
@using SourceCode.WebClasses;
@using SourceCode.Utilizadores;
@using SourceCode;
@using System.Text.Json;

<PageTitle>Página de autenticação</PageTitle>

@if (loginSucess)
{
	<UserComponent email="@email"/>
}
else
	{
	<h1>Feiras Virtuais de Espinho</h1>
	<br />
	<div class="page">
		<main>
			@if (erro != 0)
			{
				<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="1"/>
			}
			<div>
				<label><b>Email</b></label>
				<input type="text" class="tb" id="email" name="email" placeholder="Insira o seu email" @bind-value="email" />
			</div>
			<br />
			<div>
				<label> <b>Palavra passe</b> </label>
				<input type="password" class="tb" id="password" name="password" @bind-value="password" />
			</div>
			<br />
			<div>
				<button class="buttonA" @onclick="verificaCredencais">Autenticar</button>
			</div>
		</main>
	</div>
}


@code 
{
	private bool loginSucess = false;
	private int erro = 0;
	private string email = "";
	private string password = "";
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private static LoginComponent login;
	protected override void OnInitialized()
	{
		login = this;
		this.codigosErro[1] = "Dados de acesso incorretos";
		this.codigosErro[2] = "Campos incompletos";
		this.codigosErro[3] = "";
	}
	private void CleanFields()
	{
		email = "";
		password = "";
	}
	public static LoginComponent GetInstace()
	{
		return login;
	}
	public void CleanWarning()
	{
		this.erro = 0;
		StateHasChanged();
	}
	private void verificaCredencais()
	{
		if(email.Length == 0 || password.Length == 0)
		{
			this.erro = 2;
		}
		else 
		{
			NavBar.GetInstance().LoginFeirante(email);
			NavMenu.GetInstance().lista = NavBar.GetInstance().GetMenu((int)NavBar.menusNomes.Feirante);
			loginSucess = true;
			NavMenu.GetInstance().show = true;
			NavMenu.GetInstance().Refresh();
			/*
			SistemaFeiras sistemaFeiras = SistemaFeiras.GetInstance();
			try
			{
				int existe = sistemaFeiras.Login(email, password);
				switch (existe)
				{
					case 0:
						NavBar.GetInstance().LoginCL(email);
						NavMenu.GetInstance().lista = NavBar.GetInstance().GetMenu((int)NavBar.menusNomes.Cliente);
						break;
					case 1:
						NavMenu.GetInstance().lista = NavBar.GetInstance().GetMenu((int)NavBar.menusNomes.Admin);
						break;
					case 2:
						NavMenu.GetInstance().lista = NavBar.GetInstance().GetMenu((int)NavBar.menusNomes.Feirante);
						break;
				}
				loginSucess = true;
				NavMenu.GetInstance().show = true;
				NavMenu.GetInstance().Refresh();
			}
			catch (Exception e)
			{
				this.erro = 3;
				codigosErro[3] = e.Message;
			}*/
		}
	}
	public void Logout()
	{
		this.CleanFields();
		this.loginSucess = false;
		StateHasChanged();
	}
}
