@page "/createacc/{log}"
@using SourceCode.Utilizadores;
@using SourceCode;
@using Data;
@inject NavigationManager navigationManager;
@inject SistemaFeiras facade;

<PageTitle>Página de criação de conta</PageTitle>

<h1>Criar conta</h1>

<br />

<div class="page">
	<main>
		@if (erro != 0)
		{
			<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="2" />
		}
		else if (sucess)
		{
			<WarningComponent mensagem="@sucmensagem" sucess="true" page="2" />
		}
		<div>
			<label><b>Email</b></label>
			<input type="text" class="tb" id="email" name="email" placeholder="Insira o seu email" @bind-value="email" />
		</div>
		<br />
		<div>
			<label><b>Nome de utilizador</b></label>
			<input type="text" class="tb" id="name" name="name" placeholder="Insira o seu nome de utilizador" @bind-value="name" />
		</div>
		<br />
		<div>
			<label><b>Data de nascimento (DD-MM-AAAA)</b></label>
			<input type="text" class="tb" id="bornDate" name="bornDate" placeholder="Insira a sua data de nascimento" @bind-value="bornDate" />
		</div>
		<br />
		<div>
			<label> <b>Palavra passe</b> </label>
			<input type="password" class="tb" id="password" name="password" @bind-value="password" />
		</div>
		<br />
		<div>
			<label> <b>Repita a palvra passe</b> </label>
			<input type="password" class="tb" id="passwordRepeat" name="passwordRepeat" @bind-value="passwordRepat"/>
		</div>
		<br />
		@if (log.Length == 1)
		{
			<div>
				<input type="radio" name="tipo" value="Cliente" @onclick="() => Selected(1)" checked=@(selected == 1) /><b> Cliente</b>
				<br />
				<input type="radio" name="tipo" value="Feirante" @onclick="() => Selected(2)" checked=@(selected == 2)/><b> Feirante</b>
			</div>
			<br />
		}
		@if(this.selected == 2)
		{
			<div>
				<label><b>Número da conta bancária</b></label>
				<input type="text" class="tb" id="numConta" name="numConta" placeholder="Insira a número da sua conta bancária" @bind-value="numConta" />
			</div>
			<br />
		}
		<div>
			<button class="buttonA" @onclick="AdicionarConta">Adicionar Conta</button>
		</div>
	</main>
</div>

@code
{
	[Parameter, EditorRequired]
	public string log { get; set; }
	private bool sucess = false;
	private string sucmensagem = "Conta criada com sucesso";
	private int selected;
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	protected int erro = 0;
	protected string email = "";
	protected string name = "";
	protected string bornDate = "";
	protected string password = "";
	protected string passwordRepat = "";
	protected string numConta = "";
	private static CreateACCComponent createACC;
	protected override void OnInitialized()
	{
		createACC = this;
		this.selected = 0;
		this.codigosErro[1] = "Campos incompletos";
		this.codigosErro[2] = "Passwords diferentes";
		this.codigosErro[3] = "Data inválida";
		this.codigosErro[4] = "Opção não selecionada";
		this.codigosErro[5] = "Número de cartão inválido";
		this.codigosErro[6] = "";
	}
	public static CreateACCComponent GetInstance()
	{
		return createACC;
	}
	private void LimpaCampos()
	{
		this.selected = 0;
		this.email = "";
		this.name = "";
		this.bornDate = "";
		this.password = "";
		this.passwordRepat = "";
	}
	public void AdicionarConta()
	{
		this.erro = 0;
		DateTime date = new DateTime();
		if (email.Length == 0 || name.Length == 0 || bornDate.Length == 0 || password.Length == 0 || passwordRepat.Length == 0)
			this.erro = 1;
		else if (!password.Equals(passwordRepat))
		{
			this.password = "";
			this.passwordRepat = "";
			this.erro = 2;
		}
		else if (bornDate.Count(c => (c == '-')) != 2 || !DateTime.TryParse(bornDate, out date))
		{
			this.bornDate = "";
			this.erro = 3;
		}
		else if (selected == 0 && log.Length == 1)
			this.erro = 4;
		else
		{
			Utilizador utilizador = null;
			bool b = false;
			if(log.Length > 1)
			{
				erro = 0;
				b = true;
				utilizador = new Administrador(name, password, email, date, DateTime.Today);
			}
			else
			{
				switch (selected)
				{
					case 1:
						b = true;
						utilizador = new Cliente(name, password, email, date, DateTime.Today);
						break;
					case 2:
						b = true;
						int num = 0;
						if (int.TryParse(numConta, out num))
							utilizador = new Feirante(name, password, email, date, DateTime.Today, num);
						else
							this.erro = 5;
						break;
				}
			}
			if(b && this.erro == 0)
			{
				try
				{
					facade.Registo(utilizador);
					this.sucess = true;
					this.LimpaCampos();
				}
				catch(Exception e)
				{
					this.erro = 6;
					codigosErro[6] = e.Message;
				}
			}
		}
	}
	public void Selected(int novoValor)
	{
		this.selected = novoValor;
	}

	public void CleanWarning()
	{
		this.erro = 0;
		sucess = false;
		StateHasChanged();
	}
}
