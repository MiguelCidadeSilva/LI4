@page "/showleiloes"
@using SourceCode.Feiras;
@using SourceCode.Utilizadores;
@using SourceCode.Stands;
@using SourceCode.WebClasses;
@using SourceCode;
@using FeirasEspinhoBlazorApp.Pages.PagesFeira;
@inject SistemaFeiras facade;

<PageTitle>Leilões</PageTitle>

<div>
	@if(showLeilao)
	{
		<ShowLeilaoComponent leilao="@table.GetElement()" email="@email" component="this"/>
	}
	else if (formLeilao)
	{
		<FeiraSelectComponent email="@email" component="this"/>
	}
	else
	{
		<h2>Leilões disponíveis</h2>
		<br />
		@if (erro != 0)
		{
			<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="6" />
		}
		else if (sucess)
		{
			<WarningComponent mensagem="@sucess_msg" sucess="true" page="6"/>
		}
		<div class="tableFixHead">
			<table>
				<thead>
					<tr>
						<th>Id</th>
						<th>Responsável</th>
						<th>Produto</th>
						<th>Quantidade</th>
						<th>Data de fim</th>
						<th>Última proposta</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var leilao in table.Content)
					{
						<tr class=@table.Cssclasses[leilao.Item1] @onclick="() => table.SelectedRow(leilao.Item1)">
							<td> @leilao.Item2.Id</td>
							<td> @nomesDonos[leilao.Item2.Stand]</td>
							<td> @nomesProdutos[leilao.Item2.Produto]</td>
							<td> @leilao.Item2.Quantidade</td>
							<td> @leilao.Item2.Date.ToShortDateString()</td>
							<td> @leilao.Item2.BidAtual</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<br />
		<div>
			<button class="buttonA buttonTable1" @onclick="ConsultarLeilao">Consultar Leilão</button>
			@if(retroceder != 0)
			{
				<button class="buttonA" @onclick="Retroceder">Retroceder</button>
			}
			else if(isFeirante)
			{
				<button class="buttonA buttonTable2" @onclick="CriarLeilao">Criar Leilão</button>	
			}
		</div>
	}
</div>

@code 
{
	[Parameter, EditorRequired]
	public int idFeira { get; set; }
	[Parameter, EditorRequired]
	public string email { get; set; }
	[Parameter, EditorRequired]
	public int idStand { get; set; }
	[Parameter, EditorRequired]
	public ShowFeiraStandsComponent stands { get; set; }
	[Parameter, EditorRequired]
	public ShowFeirasComponent feiras { get; set; }
	private bool sucess = false;
	private string sucess_msg = "";
	private Table<Leilao> table;
	private Dictionary<int, string> nomesDonos = new Dictionary<int, string>();
	private Dictionary<int, string> nomesProdutos = new Dictionary<int, string>();
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private bool showLeilao;
	private bool isFeirante = false;
	private bool formLeilao = false;
	private int retroceder = 0;
	private int erro = 0;
	private List<Leilao> OnInitializedUser()
	{
		Utilizador user = facade.GetUtilizador(email);
		isFeirante = user is Feirante;
		List<Leilao> conteudo = facade.GetLeiloesCL(email);
		return conteudo;
	}
	private List<Leilao> OnInitializedFeira()
	{
		List<Leilao> conteudo = facade.GetLeiloesFeira(idFeira);
		retroceder = 1;
		return conteudo;
	}
	private List<Leilao> OnInitializedFeiraStand()
	{
		retroceder = 2;
		List<Leilao> conteudo = facade.GetLeiloesFeiraStand(idFeira, idStand);
		return conteudo;
	}
	private List<Leilao> InitializeData()
	{
		List<Leilao> conteudo;
		if (idStand != -1)
			conteudo = OnInitializedFeiraStand();
		else if (idFeira != -1)
			conteudo = OnInitializedFeira();
		else
			conteudo = OnInitializedUser();
		this.table = new Table<Leilao>(conteudo);
		return conteudo;
	}
	protected override void OnInitialized()
	{
		List<Leilao> conteudo = InitializeData();
		foreach(Leilao leilao in conteudo)
		{
			Stand stand = facade.GetStand(leilao.Stand);
			Feirante feirante = (Feirante)facade.GetUtilizador(stand.EmailDono);
			Produto produto = stand.Produtos.Find(p => p.IdProduto == leilao.Produto);
			nomesProdutos[leilao.Produto] = produto.Nome;
			nomesDonos[leilao.Stand] = feirante.Username;
		}
		codigosErro[1] = "Nenhum leilão selecionado";
	}
	private void ConsultarLeilao()
	{
		CleanWarning();
		if (table.IdValid())
		{
			this.erro = 0;
			Leilao l = table.GetElement();
			showLeilao = true;
		}
		else
		{
			this.erro = 1;
		}
	}
	private void Retroceder()
	{
		if (retroceder == 2) stands.GetBack();
		else if (retroceder == 1) feiras.GetBack();
	}
	public void CleanWarning()
	{
		this.erro = 0;
		sucess = false;
		StateHasChanged();
	}
	public void GetBack()
	{
		InitializeData();
		showLeilao = false;
		formLeilao = false;
		sucess = false;
		erro = 0;
		table.Unselect();
		StateHasChanged();
	}
	public void GetBack(string message)
	{
		InitializeData();
		showLeilao = false;
		formLeilao = false;
		sucess = true;
		sucess_msg = message;
		table.Unselect();
		StateHasChanged();
	}
	public void CriarLeilao()
	{
		formLeilao = true;
	}

}
