@page "/showleiloes"
@using SourceCode.Feiras;
@using SourceCode.Utilizadores;
@using SourceCode.Stands;
@using SourceCode.WebClasses;
@using Pages.PagesFeira;

<PageTitle>Leilões</PageTitle>

<div>
	@if(showLeilao)
	{
		<ShowLeilaoComponent idLeilao="@idLeilaoSelected"/>
	}
	else
	{
		<h3>Leilões disponíveis</h3>
		<br />
		@if (erro != 0)
		{
			<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="6" />
		}
		<div class="tableFixHead">
			<table>
				<thead>
					<tr>
						<th>Id</th>
						<th>Responsável</th>
						<th>Produto</th>
						<th>Quantidade</th>
						<th>Data de fim</th>
						<th>Última proposta</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var leilao in table.Content)
					{
						<tr class=@table.Cssclasses[leilao.Item1] @onclick="() => table.SelectedRow(leilao.Item1)">
							<td> @leilao.Item2.Id</td>
							<td> @nomesDonos[leilao.Item2.Stand]</td>
							<td> @nomesProdutos[leilao.Item2.Produto]</td>
							<td> @leilao.Item2.Quantidade</td>
							<td> @leilao.Item2.Date</td>
							<td> @leilao.Item3</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<br />
		<div>
			<button class="buttonA buttonTable1" @onclick="ConsultarLeilao">Consultar Leilão</button>
			@if(retroceder != 0)
			{
				<button class="buttonA" @onclick="Retroceder">Retroceder</button>
			}
		</div>
	}
</div>

@code 
{
	[Parameter, EditorRequired]
	public int idFeira { get; set; }
	[Parameter, EditorRequired]
	public string emailCL { get; set; }
	[Parameter, EditorRequired]
	public int idStand { get; set; }
	private Table<Leilao> table;
	private Dictionary<int, string> nomesDonos = new Dictionary<int, string>();
	private Dictionary<int, string> nomesProdutos = new Dictionary<int, string>();
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private static ShowLeiloesComponent instance;
	private int idLeilaoSelected;
	private bool showLeilao;
	private int retroceder = 0;
	private int erro = 0;
	public static ShowLeiloesComponent GetInstance()
	{
		return instance;
	}
	private void OnInitializedCL()
	{
		List<Leilao> conteudo = new List<Leilao>();
		conteudo.Add(new Leilao(2, DateTime.Now, 20.0f, 100.0f, 2, 3, 4, 5, 6));
		nomesDonos[4] = "braga";
		nomesProdutos[2] = "pera";
		/*
		conteudo.Add(new Leilao(8, DateTime.Now, 20.0f, 100.0f, 2, 3, 4 , 5, 6));
		conteudo.Add(new Leilao(2, DateTime.Now, 30.0f, 120.0f, 3, 4, 4 , 2, 5));
		conteudo.Add(new Leilao(4, DateTime.Now, 40.0f, 130.0f, 4, 6, 3 , 2, 5));
		conteudo.Add(new Leilao(5, DateTime.Now, 50.0f, 150.0f, 5, 5, 3 , 2, 4));
		conteudo.Add(new Leilao(3, DateTime.Now, 60.0f, 165.0f, 6, 4, 4 , 1, 6));
		conteudo.Add(new Leilao(7, DateTime.Now, 95.0f, 164.0f, 7, 1, 4 , 5, 3));
		conteudo.Add(new Leilao(6, DateTime.Now, 90.0f, 500.0f, 8, 2, 4 , 1, 3));
		*/
		this.table = new Table<Leilao>(conteudo);
	}
	private void OnInitializedFeira()
	{
		retroceder = 1;
		List<Leilao> conteudo = new List<Leilao>();
		conteudo.Add(new Leilao(8, DateTime.Now, 20.0f, 100.0f, 2, 3, 4, 5, 6));
		nomesDonos[4] = "abc";
		nomesProdutos[2] = "laranja";
		/*
		conteudo.Add(new Leilao(8, DateTime.Now, 20.0f, 100.0f, 2, 3, 4 , 5, 6));
		conteudo.Add(new Leilao(2, DateTime.Now, 30.0f, 120.0f, 3, 4, 4 , 2, 5));
		conteudo.Add(new Leilao(4, DateTime.Now, 40.0f, 130.0f, 4, 6, 3 , 2, 5));
		conteudo.Add(new Leilao(5, DateTime.Now, 50.0f, 150.0f, 5, 5, 3 , 2, 4));
		conteudo.Add(new Leilao(3, DateTime.Now, 60.0f, 165.0f, 6, 4, 4 , 1, 6));
		conteudo.Add(new Leilao(7, DateTime.Now, 95.0f, 164.0f, 7, 1, 4 , 5, 3));
		conteudo.Add(new Leilao(6, DateTime.Now, 90.0f, 500.0f, 8, 2, 4 , 1, 3));
		*/
		this.table = new Table<Leilao>(conteudo);
	}
	private void OnInitializedFeiraStand()
	{
		retroceder = 2;
		List<Leilao> conteudo = new List<Leilao>();
		conteudo.Add(new Leilao(20, DateTime.Now, 20.0f, 100.0f, 2, 3, 4, 5, 6));
		nomesDonos[4] = "portugal";
		nomesProdutos[2] = "cr7";
		/*
		conteudo.Add(new Leilao(8, DateTime.Now, 20.0f, 100.0f, 2, 3, 4 , 5, 6));
		conteudo.Add(new Leilao(2, DateTime.Now, 30.0f, 120.0f, 3, 4, 4 , 2, 5));
		conteudo.Add(new Leilao(4, DateTime.Now, 40.0f, 130.0f, 4, 6, 3 , 2, 5));
		conteudo.Add(new Leilao(5, DateTime.Now, 50.0f, 150.0f, 5, 5, 3 , 2, 4));
		conteudo.Add(new Leilao(3, DateTime.Now, 60.0f, 165.0f, 6, 4, 4 , 1, 6));
		conteudo.Add(new Leilao(7, DateTime.Now, 95.0f, 164.0f, 7, 1, 4 , 5, 3));
		conteudo.Add(new Leilao(6, DateTime.Now, 90.0f, 500.0f, 8, 2, 4 , 1, 3));
		*/
		this.table = new Table<Leilao>(conteudo);
	}
	protected override void OnInitialized()
	{
		instance = this;
		if (emailCL.Length != 0)
			OnInitializedCL();
		else if (idStand != -1)
			OnInitializedFeiraStand();
		else
			OnInitializedFeira();
		codigosErro[1] = "Nenhum leilão selecionado";
	}
	private void ConsultarLeilao()
	{

		if (table.IdValid())
		{
			this.erro = 0;
			Leilao l = table.GetElement();
			idLeilaoSelected = l.Id;
			showLeilao = true;
		}
		else
		{
			this.erro = 1;
		}
	}
	private void Retroceder()
	{
		if (retroceder == 2) ShowFeiraStandsComponent.GetInstace().GetBack();
		else if (retroceder == 1) ShowFeirasComponent.GetInstace().GetBack();
	}
	public void CleanWarning()
	{
		this.erro = 0;
		StateHasChanged();
	}
	public void GetBack()
	{
		showLeilao = false;
		table.Unselect();
		StateHasChanged();
	}

}
