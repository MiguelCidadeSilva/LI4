@page "/showfeirastands"
@using SourceCode.WebClasses;
@using SourceCode.Stand;
@inject NavigationManager navigationManager

<PageTitle>Stands</PageTitle>

<div>
	@if (showAvaliacao)
	{
		<div class="popup">
			<h2 style="text-align: center">Avalie o Stand</h2>
			<br />
			<div>
				<input type="radio" name="nota1" value="nota1" @onclick="() => Avalia(1)" checked=@(avaliacao == 1) /><b> Nota 1</b>
				<br />
				<input type="radio" name="nota2" value="nota2" @onclick="() => Avalia(2)" checked=@(avaliacao == 2) /><b> Nota 2</b>
				<br />
				<input type="radio" name="nota3" value="nota3" @onclick="() => Avalia(3)" checked=@(avaliacao == 3) /><b> Nota 3</b>
				<br />
				<input type="radio" name="nota4" value="nota4" @onclick="() => Avalia(4)" checked=@(avaliacao == 4) /><b> Nota 4</b>
				<br />
				<input type="radio" name="nota5" value="nota5" @onclick="() => Avalia(5)" checked=@(avaliacao == 5) /><b> Nota 5</b>
			</div>
		</div>

	}
	else
	{	
		<h3>Stands disponíveis</h3>
		<br />
		@if (erro != 0)
		{
			<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="4"/>
		}
		<div class="tableFixHead">
			<table>
				<thead>
					<tr>
						<th>Id</th>
						<th>Feirante</th>
						<th>Data Criação</th>
						<th>Categoria</th>
						<th>Avaliação</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var stand in tabelContent.Content)
					{
						<tr class=@tabelContent.Cssclasses[stand.Item1] @onclick="() => tabelContent.SelectedRow(stand.Item1)">
								<td> @stand.Item2.IdStand</td>
								<td> @stand.Item2.EmailDono</td>
								<td> @stand.Item2.DataCriacao</td>
								<td> @stand.Item2.Categoria</td>
								<td> @stand.Item3</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<br />
		<div>
			<button class="buttonA buttonTable1" @onclick="ConsultarStand">Consultar Stand</button>
			<button class="buttonA buttonTable2" @onclick="ConsultarLeiloes">Consultar Leilões</button>
			<button class="buttonA" @onclick="Retroceder">Retroceder</button>
		</div>
	}
</div>
@code {
	private int avaliacao = -1;
	private bool showAvaliacao = false;
	private Table<Stand> tabelContent;
	private int erro = 0;
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private static ShowFeiraStandsComponent showBancas;
	protected override void OnInitialized()
	{
		List<(Stand, int)> conteudo = new List<(Stand, int)>();
		conteudo.Add((new Stand(1,false,DateTime.Now,"abc",2), 2));
		conteudo.Add((new Stand(2,false,DateTime.Now,"abc",2), 3));
		conteudo.Add((new Stand(3,false,DateTime.Now,"abc",2), 4));
		conteudo.Add((new Stand(4,false,DateTime.Now,"abc",2), 5));
		conteudo.Add((new Stand(5,false,DateTime.Now,"abc",2), 3));
		conteudo.Add((new Stand(6,false,DateTime.Now,"abc",2), 3));
		conteudo.Add((new Stand(7,false,DateTime.Now,"abc",2), 3));
		this.tabelContent = new Table<Stand>(conteudo);
		codigosErro[1] = "Nenhum stand selecionado";
	}
	public static ShowFeiraStandsComponent GetInstace()
	{
		return showBancas;
	}
	public void CleanWarning()
	{
		this.erro = 0;
		StateHasChanged();
	}
	public void ConsultarStand()
	{
		if (tabelContent.IdValid())
		{
			erro = 0;
			navigationManager.NavigateTo("showstand");
		}
		else
		{
			erro = 1;
		}
	}

	public void ConsultarLeiloes()
	{
		if (tabelContent.IdValid())
		{
			erro = 0;
		}
		else
		{
			erro = 1;
		}
	}
	public void Avalia(int avaliacao)
	{
		this.avaliacao = avaliacao;
	}
	public void Retroceder()
	{
		showAvaliacao = true;
	}
}
