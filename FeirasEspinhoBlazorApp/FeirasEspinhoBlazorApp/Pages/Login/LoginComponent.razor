@page "/login"
@inject NavigationManager navigationManager
@using SourceCode.WebClasses;

<PageTitle>Página de autenticação</PageTitle>

<h1>Feiras Virtuais de Espinho</h1>

<br />

<div class="page">
	<main>
		@if (erro != 0)
		{
			<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="1"/>
		}
		<div>
			<label><b>Email</b></label>
			<input type="text" class="tb" id="email" name="email" placeholder="Insira o seu email" @bind-value="email" />
		</div>
		<br />
		<div>
			<label> <b>Palavra passe</b> </label>
			<input type="password" class="tb" id="password" name="password" @bind-value="password" />
		</div>
		<br />
		<div>
			<button class="buttonA" @onclick="verificaCredencais">Autenticar</button>
		</div>
	</main>
</div>


@code 
{
	private int erro = 0;
	private string email = "";
	private string password = "";
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	private static LoginComponent login;
	protected override void OnInitialized()
	{
		login = this;
		this.codigosErro[1] = "Dados de acesso incorretos";
		this.codigosErro[2] = "Campos incompletos";
	}
	public static LoginComponent GetInstace()
	{
		return login;
	}
	public void CleanWarning()
	{
		this.erro = 0;
		StateHasChanged();
	}
	private void verificaCredencais()
	{
		bool existe = true;
		if(email.Length == 0 || password.Length == 0)
		{
			this.erro = 2;
		}
		else 
		{
			// método a perguntar à base de dados se existe
			if(existe)
			{
				NavMenu.GetInstance().lista = NavBar.GetInstance().GetMenu((int)NavBar.menusNomes.Cliente);
				NavMenu.GetInstance().show = true;
				NavMenu.GetInstance().Refresh();
				navigationManager.NavigateTo("user");
			}
			else
				this.erro = 1;
		}
	}
}
