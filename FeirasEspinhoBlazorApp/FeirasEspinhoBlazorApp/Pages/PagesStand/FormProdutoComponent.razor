@using SourceCode.Stands;
@using SourceCode;
@inject SistemaFeiras facade;

<h2>Formulário Produto</h2>

@if (erro != 0)
{
	<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="12" />
}
<div>
	<label><b>Produto</b></label>
	<input type="text" class="tb" id="nome" name="nome" placeholder="Nome do produto" @bind-value="produto" />
	<br />
	<label><b>Quantidade</b></label>
	<input type="text" class="tb" id="stock" name="stock" placeholder="Stock inicial" @bind-value="quantidade" />
	<br />
	<label><b>Imposto</b></label>
	<input type="text" class="tb" id="imposto" name="imposto" placeholder="Indique o imposto associado" @bind-value="imposto" />
	<br />
	<label><b>Preco</b></label>
	<input type="text" class="tb" id="preco" name="preco" placeholder="Preço produto" @bind-value="preco" />
</div>
<br />
<div>
	<button class="buttonA" @onclick="AdicionarProduto">Adicionar Produto</button>
	<button class="buttonA" @onclick="Retroceder">Retroceder</button>
</div>



@code 
{
	[Parameter, EditorRequired]
	public int page { get; set; }
	[Parameter, EditorRequired]
	public int stand { get; set; }
	[Parameter, EditorRequired]
	public FormStandComponent formprod { get; set; }
	[Parameter, EditorRequired]
	public ShowStandComponent standcomp { get; set; }
	private float imposto = 0;
	private int erro = 0;
	private bool sucess = false;
	private string sucmensagem;
	private string produto = "";
	private int quantidade = 0;
	private float preco = 0f;
	private string categoria = "";
	private Dictionary<int, string> codigosErro = new Dictionary<int, string>();
	protected override void OnInitialized()
	{
		codigosErro[1] = "Um produto tem que ter um nome";
		codigosErro[2] = "Valores inválidos, todos os números tem que ser maior ou igual que 0";
	}
	public void CleanWarning()
	{
		erro = 0;
		StateHasChanged();
	}
	public void AdicionarProduto()
	{
		CleanWarning();
		if(produto.Length > 0)
		{
			if (quantidade >= 0 && imposto > 0 && preco > 0)
			{
				if (page == 0)
				{
					formprod.AdicionaProduto(new Produto(0, produto, 0, 0, quantidade, preco, true), imposto);
					formprod.GetBack();
				}
				else
				{
					facade.AddProduto(new Produto(0, produto, 0, stand, quantidade, preco, true), imposto);
					standcomp.ShowStand("Produto Adicionado");
				}
			}
			else
				erro = 2;
		}
		erro = 1;
	}
	public void Retroceder()
	{
		if (page == 0)
		{
			formprod.GetBack();
		}
		else
		{
			standcomp.ShowStand(3);
		}
	}
}
