@page "/startnegociation"
@using SourceCode;
@using SourceCode.Vendas;
@using FeirasEspinhoBlazorApp.Pages.PagesNegociation;
@inject SistemaFeiras facade;


<h2>Negociação</h2>
<br />
@if (erro != 0)
{
	<WarningComponent mensagem="@codigosErro[erro]" sucess="false" page="9" />
}
<div>
	<div>
		<label><b>Valor Total</b></label>
		<input type="text" class="tb" id="preco" name="preco" @bind-value="venda.Preco" readonly="readonly" />
	</div>
	<br />
	<div>
		<label><b>Insira o valor que pretende pagar</b></label>
		<input type="text" class="tb" id="precoNegocicao" name="precoNegocicao" placeholder="xxxxxxxx" @bind-value="valorapagar" />
	</div>
	<br />
	<div>
		<button class="buttonA buttonTable1" @onclick="Confirmar">Confirmar</button>
		<button class="buttonA buttonTable2" @onclick="Cancelar">Cancelar</button>
	</div>
</div>

@code
{
	[Parameter, EditorRequired]
	public Venda venda { get; set; }
	[Parameter, EditorRequired]
	public int returnPage { get; set; }
	[Parameter, EditorRequired]
	public ShowStandComponent stand { get; set; }
	[Parameter, EditorRequired]
	public ShowNegociacoesComponent neg { get; set; }
	[Parameter, EditorRequired]
	public NegociationComponent negsin { get; set; }
	private float valorapagar = 0;
	private int erro = 0;
	private Dictionary<int, string> codigosErro = new();
	protected override void OnInitialized()
	{
		codigosErro[1] = "Valor a negociar inválido.";
	}

	public void Confirmar()
	{
		CleanWarning();
		if(valorapagar <= 0)
		{
			erro = 1;
		}
		else if(returnPage == 0)
		{
			facade.AddNegociacaoVenda(venda, new Negociacao(0, venda.Preco, valorapagar, false, false));
			stand.ShowStand("Negociação registada");
		}
		else
		{
			facade.RegistaNovoPreco(venda.Negociacao.Value, valorapagar);
			neg.GetBack("Preço Registado");
		}

	}
	public void Cancelar()
	{
		if (returnPage == 0)
			stand.ShowStand(3);
		else
			negsin.GetBack();
	}
	public void CleanWarning()
	{
		erro = 0;
		StateHasChanged();
	}
}
